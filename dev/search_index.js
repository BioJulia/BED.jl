var documenterSearchIndex = {"docs":
[{"location":"#BED.jl-1","page":"Home","title":"BED.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"BED is a text-based file format for representing genomic annotations like genes, transcripts, and so on. A BED file has tab-delimited and variable-length fields; the first three fields denoting a genomic interval are mandatory.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"This is an example of RNA transcripts:","category":"page"},{"location":"#","page":"Home","title":"Home","text":"chr9\t68331023\t68424451\tNM_015110\t0\t+\nchr9\t68456943\t68486659\tNM_001206\t0\t-","category":"page"},{"location":"#","page":"Home","title":"Home","text":"I/O tools for BED are provided by the BED module, which exports following three types:","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Reader type: BED.Reader\nWriter type: BED.Writer\nElement type: BED.Record","category":"page"},{"location":"#Installation-1","page":"Home","title":"Installation","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"You can install BED from the Julia REPL:","category":"page"},{"location":"#","page":"Home","title":"Home","text":"julia> Pkg.add(\"BED\")","category":"page"},{"location":"#","page":"Home","title":"Home","text":"If you are interested in the cutting edge of the development, please check out the master branch to try new features before release.","category":"page"},{"location":"#Examples-1","page":"Home","title":"Examples","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Here is a common workflow to iterate over all records in a BED file:","category":"page"},{"location":"#","page":"Home","title":"Home","text":"# Import the BED module.\nusing BED\n\n# Open a BED file.\nreader = open(BED.Reader, \"data.bed\")\n\n# Iterate over records.\nfor record in reader\n    # Do something on record (see Accessors section).\n    chrom = BED.chrom(record)\n    # ...\nend\n\n# Finally, close the reader.\nclose(reader)","category":"page"},{"location":"#","page":"Home","title":"Home","text":"If you repeatedly access records within specific ranges, it would be more efficient to construct an IntervalCollection object from a BED reader:","category":"page"},{"location":"#","page":"Home","title":"Home","text":"using BED\nusing GenomicFeatures\n\n# Create an interval collection in memory.\nicol = open(BED.Reader, \"data.bed\") do reader\n    IntervalCollection(reader)\nend\n\n# Query overlapping records.\nfor interval in eachoverlap(icol, Interval(\"chrX\", 40001, 51500))\n    # A record is stored in the metadata field of an interval.\n    record = metadata(interval)\n    # ...\nend","category":"page"},{"location":"lib/public/#API-Reference-1","page":"API Reference","title":"API Reference","text":"","category":"section"},{"location":"lib/public/#","page":"API Reference","title":"API Reference","text":"Pages = [\"public.md\"]","category":"page"},{"location":"lib/public/#","page":"API Reference","title":"API Reference","text":"Modules = [Indexes]\nprivate = false","category":"page"}]
}
